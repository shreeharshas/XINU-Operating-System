/* getfreemem.c - getfreemem */
#include <xinu.h>
#include <linklist.h>
/*-------------------------------------------------------------------------------------------------------------
 *  getfreemem  -  Gets the list of all free memory block, returning the list of free blocks from the free list
 *------------------------------------------------------------------------------------------------------------*/

linklist *getfreemem(uint32){					/* Size of memory requested */
    linklist free_list;
    intmask mask; 						/* Saved interrupt mask */
    struct memblk *prev, *curr, *leftover;
    mask = disable();
    nbytes = 1;
    prev = &memlist;
    curr = memlist.mnext;
 
    while (curr != NULL) {                      		/* Search free list */
        if (curr->mlength == nbytes) {          		/* Block is exact match */
            prev->mnext = curr->mnext;
            memlist.mlength -= nbytes;
            restore(mask);
            return (char *)(curr);
       } 
       else if (curr->mlength > nbytes) {       		/* Split big block */
            leftover = (struct memblk *)((uint32) curr + nbytes);
            prev->mnext = leftover;
            leftover->mnext = curr->mnext;
            leftover->mlength = curr->mlength - nbytes;
            memlist.mlength -= nbytes;
            restore(mask);
            return (char *)(curr);
       } 
       else {                                   		/* Move to next block */
            prev = curr;
            curr = curr->mnext;
       }
    }
    if(isempty(free_list)){
        restore(mask);
        return (char *)SYSERR;
    }
    else{
        restore(mask);
        return(free_list);
    }
}
